//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.18444
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FukjBizSystem.Application.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ShokenMstDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ShokenMstDataSet : global::System.Data.DataSet {
        
        private ShokenMstDataTable tableShokenMst;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenMstDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ShokenMstDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ShokenMst"] != null)) {
                    base.Tables.Add(new ShokenMstDataTable(ds.Tables["ShokenMst"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShokenMstDataTable ShokenMst {
            get {
                return this.tableShokenMst;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ShokenMstDataSet cln = ((ShokenMstDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ShokenMst"] != null)) {
                    base.Tables.Add(new ShokenMstDataTable(ds.Tables["ShokenMst"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableShokenMst = ((ShokenMstDataTable)(base.Tables["ShokenMst"]));
            if ((initTable == true)) {
                if ((this.tableShokenMst != null)) {
                    this.tableShokenMst.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ShokenMstDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ShokenMstDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableShokenMst = new ShokenMstDataTable();
            base.Tables.Add(this.tableShokenMst);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeShokenMst() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ShokenMstDataSet ds = new ShokenMstDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ShokenMstRowChangeEventHandler(object sender, ShokenMstRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShokenMstDataTable : global::System.Data.TypedTableBase<ShokenMstRow> {
            
            private global::System.Data.DataColumn columnShokenKbn;
            
            private global::System.Data.DataColumn columnShokenCd;
            
            private global::System.Data.DataColumn columnShokenWd;
            
            private global::System.Data.DataColumn columnShokenRyakubun;
            
            private global::System.Data.DataColumn columnShokenGaikankensaKoumokuCd;
            
            private global::System.Data.DataColumn columnShokenGaikankensaKoumokuHandan;
            
            private global::System.Data.DataColumn columnShokenGaikankensaKoumokuJuyodo;
            
            private global::System.Data.DataColumn columnShokenGaikankensaKoumokuHantei;
            
            private global::System.Data.DataColumn columnShokenGyoseiHokokuLevel;
            
            private global::System.Data.DataColumn columnShokenMakerGenin7JouKbn;
            
            private global::System.Data.DataColumn columnShokenKoujiGenin7JouKbn;
            
            private global::System.Data.DataColumn columnShokenHoshuGenin7JouKbn;
            
            private global::System.Data.DataColumn columnShokenSeisouGenin7JouKbn;
            
            private global::System.Data.DataColumn columnShokenSetchishaGenin7JouKbn;
            
            private global::System.Data.DataColumn columnShokenMekaGenin11JouKbn;
            
            private global::System.Data.DataColumn columnShokenKoujiGenin11JouKbn;
            
            private global::System.Data.DataColumn columnShokenHoshuGenin11JouKbn;
            
            private global::System.Data.DataColumn columnShokenSeisouGenin11JouKbn;
            
            private global::System.Data.DataColumn columnShokenSetchishaGenin11JouKbn;
            
            private global::System.Data.DataColumn columnShokenHyoujiIchiDaiCd;
            
            private global::System.Data.DataColumn columnShokenHyoujiIchiChuCd;
            
            private global::System.Data.DataColumn columnShokenHyoujiIchiShoCd;
            
            private global::System.Data.DataColumn columnShokenSakujouKbn;
            
            private global::System.Data.DataColumn columnShokenGaikankensaCd;
            
            private global::System.Data.DataColumn columnShokenTanisouchiCd;
            
            private global::System.Data.DataColumn columnShokenBikou;
            
            private global::System.Data.DataColumn columnInsertDt;
            
            private global::System.Data.DataColumn columnInsertUser;
            
            private global::System.Data.DataColumn columnInsertTarm;
            
            private global::System.Data.DataColumn columnUpdateDt;
            
            private global::System.Data.DataColumn columnUpdateUser;
            
            private global::System.Data.DataColumn columnUpdateTarm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstDataTable() {
                this.TableName = "ShokenMst";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenMstDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ShokenMstDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKbnColumn {
                get {
                    return this.columnShokenKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenCdColumn {
                get {
                    return this.columnShokenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenWdColumn {
                get {
                    return this.columnShokenWd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenRyakubunColumn {
                get {
                    return this.columnShokenRyakubun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenGaikankensaKoumokuCdColumn {
                get {
                    return this.columnShokenGaikankensaKoumokuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenGaikankensaKoumokuHandanColumn {
                get {
                    return this.columnShokenGaikankensaKoumokuHandan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenGaikankensaKoumokuJuyodoColumn {
                get {
                    return this.columnShokenGaikankensaKoumokuJuyodo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenGaikankensaKoumokuHanteiColumn {
                get {
                    return this.columnShokenGaikankensaKoumokuHantei;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenGyoseiHokokuLevelColumn {
                get {
                    return this.columnShokenGyoseiHokokuLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMakerGenin7JouKbnColumn {
                get {
                    return this.columnShokenMakerGenin7JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKoujiGenin7JouKbnColumn {
                get {
                    return this.columnShokenKoujiGenin7JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGenin7JouKbnColumn {
                get {
                    return this.columnShokenHoshuGenin7JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouGenin7JouKbnColumn {
                get {
                    return this.columnShokenSeisouGenin7JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaGenin7JouKbnColumn {
                get {
                    return this.columnShokenSetchishaGenin7JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenMekaGenin11JouKbnColumn {
                get {
                    return this.columnShokenMekaGenin11JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenKoujiGenin11JouKbnColumn {
                get {
                    return this.columnShokenKoujiGenin11JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHoshuGenin11JouKbnColumn {
                get {
                    return this.columnShokenHoshuGenin11JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSeisouGenin11JouKbnColumn {
                get {
                    return this.columnShokenSeisouGenin11JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSetchishaGenin11JouKbnColumn {
                get {
                    return this.columnShokenSetchishaGenin11JouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyoujiIchiDaiCdColumn {
                get {
                    return this.columnShokenHyoujiIchiDaiCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyoujiIchiChuCdColumn {
                get {
                    return this.columnShokenHyoujiIchiChuCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenHyoujiIchiShoCdColumn {
                get {
                    return this.columnShokenHyoujiIchiShoCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenSakujouKbnColumn {
                get {
                    return this.columnShokenSakujouKbn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenGaikankensaCdColumn {
                get {
                    return this.columnShokenGaikankensaCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenTanisouchiCdColumn {
                get {
                    return this.columnShokenTanisouchiCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShokenBikouColumn {
                get {
                    return this.columnShokenBikou;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertDtColumn {
                get {
                    return this.columnInsertDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertUserColumn {
                get {
                    return this.columnInsertUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTarmColumn {
                get {
                    return this.columnInsertTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateDtColumn {
                get {
                    return this.columnUpdateDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateUserColumn {
                get {
                    return this.columnUpdateUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateTarmColumn {
                get {
                    return this.columnUpdateTarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstRow this[int index] {
                get {
                    return ((ShokenMstRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenMstRowChangeEventHandler ShokenMstRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenMstRowChangeEventHandler ShokenMstRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenMstRowChangeEventHandler ShokenMstRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ShokenMstRowChangeEventHandler ShokenMstRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddShokenMstRow(ShokenMstRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstRow AddShokenMstRow(
                        string ShokenKbn, 
                        string ShokenCd, 
                        string ShokenWd, 
                        string ShokenRyakubun, 
                        string ShokenGaikankensaKoumokuCd, 
                        string ShokenGaikankensaKoumokuHandan, 
                        string ShokenGaikankensaKoumokuJuyodo, 
                        string ShokenGaikankensaKoumokuHantei, 
                        string ShokenGyoseiHokokuLevel, 
                        string ShokenMakerGenin7JouKbn, 
                        string ShokenKoujiGenin7JouKbn, 
                        string ShokenHoshuGenin7JouKbn, 
                        string ShokenSeisouGenin7JouKbn, 
                        string ShokenSetchishaGenin7JouKbn, 
                        string ShokenMekaGenin11JouKbn, 
                        string ShokenKoujiGenin11JouKbn, 
                        string ShokenHoshuGenin11JouKbn, 
                        string ShokenSeisouGenin11JouKbn, 
                        string ShokenSetchishaGenin11JouKbn, 
                        string ShokenHyoujiIchiDaiCd, 
                        string ShokenHyoujiIchiChuCd, 
                        string ShokenHyoujiIchiShoCd, 
                        string ShokenSakujouKbn, 
                        string ShokenGaikankensaCd, 
                        string ShokenTanisouchiCd, 
                        string ShokenBikou, 
                        System.DateTime InsertDt, 
                        string InsertUser, 
                        string InsertTarm, 
                        System.DateTime UpdateDt, 
                        string UpdateUser, 
                        string UpdateTarm) {
                ShokenMstRow rowShokenMstRow = ((ShokenMstRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShokenKbn,
                        ShokenCd,
                        ShokenWd,
                        ShokenRyakubun,
                        ShokenGaikankensaKoumokuCd,
                        ShokenGaikankensaKoumokuHandan,
                        ShokenGaikankensaKoumokuJuyodo,
                        ShokenGaikankensaKoumokuHantei,
                        ShokenGyoseiHokokuLevel,
                        ShokenMakerGenin7JouKbn,
                        ShokenKoujiGenin7JouKbn,
                        ShokenHoshuGenin7JouKbn,
                        ShokenSeisouGenin7JouKbn,
                        ShokenSetchishaGenin7JouKbn,
                        ShokenMekaGenin11JouKbn,
                        ShokenKoujiGenin11JouKbn,
                        ShokenHoshuGenin11JouKbn,
                        ShokenSeisouGenin11JouKbn,
                        ShokenSetchishaGenin11JouKbn,
                        ShokenHyoujiIchiDaiCd,
                        ShokenHyoujiIchiChuCd,
                        ShokenHyoujiIchiShoCd,
                        ShokenSakujouKbn,
                        ShokenGaikankensaCd,
                        ShokenTanisouchiCd,
                        ShokenBikou,
                        InsertDt,
                        InsertUser,
                        InsertTarm,
                        UpdateDt,
                        UpdateUser,
                        UpdateTarm};
                rowShokenMstRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShokenMstRow);
                return rowShokenMstRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstRow FindByShokenKbnShokenCd(string ShokenKbn, string ShokenCd) {
                return ((ShokenMstRow)(this.Rows.Find(new object[] {
                            ShokenKbn,
                            ShokenCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShokenMstDataTable cln = ((ShokenMstDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShokenMstDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShokenKbn = base.Columns["ShokenKbn"];
                this.columnShokenCd = base.Columns["ShokenCd"];
                this.columnShokenWd = base.Columns["ShokenWd"];
                this.columnShokenRyakubun = base.Columns["ShokenRyakubun"];
                this.columnShokenGaikankensaKoumokuCd = base.Columns["ShokenGaikankensaKoumokuCd"];
                this.columnShokenGaikankensaKoumokuHandan = base.Columns["ShokenGaikankensaKoumokuHandan"];
                this.columnShokenGaikankensaKoumokuJuyodo = base.Columns["ShokenGaikankensaKoumokuJuyodo"];
                this.columnShokenGaikankensaKoumokuHantei = base.Columns["ShokenGaikankensaKoumokuHantei"];
                this.columnShokenGyoseiHokokuLevel = base.Columns["ShokenGyoseiHokokuLevel"];
                this.columnShokenMakerGenin7JouKbn = base.Columns["ShokenMakerGenin7JouKbn"];
                this.columnShokenKoujiGenin7JouKbn = base.Columns["ShokenKoujiGenin7JouKbn"];
                this.columnShokenHoshuGenin7JouKbn = base.Columns["ShokenHoshuGenin7JouKbn"];
                this.columnShokenSeisouGenin7JouKbn = base.Columns["ShokenSeisouGenin7JouKbn"];
                this.columnShokenSetchishaGenin7JouKbn = base.Columns["ShokenSetchishaGenin7JouKbn"];
                this.columnShokenMekaGenin11JouKbn = base.Columns["ShokenMekaGenin11JouKbn"];
                this.columnShokenKoujiGenin11JouKbn = base.Columns["ShokenKoujiGenin11JouKbn"];
                this.columnShokenHoshuGenin11JouKbn = base.Columns["ShokenHoshuGenin11JouKbn"];
                this.columnShokenSeisouGenin11JouKbn = base.Columns["ShokenSeisouGenin11JouKbn"];
                this.columnShokenSetchishaGenin11JouKbn = base.Columns["ShokenSetchishaGenin11JouKbn"];
                this.columnShokenHyoujiIchiDaiCd = base.Columns["ShokenHyoujiIchiDaiCd"];
                this.columnShokenHyoujiIchiChuCd = base.Columns["ShokenHyoujiIchiChuCd"];
                this.columnShokenHyoujiIchiShoCd = base.Columns["ShokenHyoujiIchiShoCd"];
                this.columnShokenSakujouKbn = base.Columns["ShokenSakujouKbn"];
                this.columnShokenGaikankensaCd = base.Columns["ShokenGaikankensaCd"];
                this.columnShokenTanisouchiCd = base.Columns["ShokenTanisouchiCd"];
                this.columnShokenBikou = base.Columns["ShokenBikou"];
                this.columnInsertDt = base.Columns["InsertDt"];
                this.columnInsertUser = base.Columns["InsertUser"];
                this.columnInsertTarm = base.Columns["InsertTarm"];
                this.columnUpdateDt = base.Columns["UpdateDt"];
                this.columnUpdateUser = base.Columns["UpdateUser"];
                this.columnUpdateTarm = base.Columns["UpdateTarm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShokenKbn = new global::System.Data.DataColumn("ShokenKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKbn);
                this.columnShokenCd = new global::System.Data.DataColumn("ShokenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenCd);
                this.columnShokenWd = new global::System.Data.DataColumn("ShokenWd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenWd);
                this.columnShokenRyakubun = new global::System.Data.DataColumn("ShokenRyakubun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenRyakubun);
                this.columnShokenGaikankensaKoumokuCd = new global::System.Data.DataColumn("ShokenGaikankensaKoumokuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenGaikankensaKoumokuCd);
                this.columnShokenGaikankensaKoumokuHandan = new global::System.Data.DataColumn("ShokenGaikankensaKoumokuHandan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenGaikankensaKoumokuHandan);
                this.columnShokenGaikankensaKoumokuJuyodo = new global::System.Data.DataColumn("ShokenGaikankensaKoumokuJuyodo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenGaikankensaKoumokuJuyodo);
                this.columnShokenGaikankensaKoumokuHantei = new global::System.Data.DataColumn("ShokenGaikankensaKoumokuHantei", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenGaikankensaKoumokuHantei);
                this.columnShokenGyoseiHokokuLevel = new global::System.Data.DataColumn("ShokenGyoseiHokokuLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenGyoseiHokokuLevel);
                this.columnShokenMakerGenin7JouKbn = new global::System.Data.DataColumn("ShokenMakerGenin7JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMakerGenin7JouKbn);
                this.columnShokenKoujiGenin7JouKbn = new global::System.Data.DataColumn("ShokenKoujiGenin7JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKoujiGenin7JouKbn);
                this.columnShokenHoshuGenin7JouKbn = new global::System.Data.DataColumn("ShokenHoshuGenin7JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGenin7JouKbn);
                this.columnShokenSeisouGenin7JouKbn = new global::System.Data.DataColumn("ShokenSeisouGenin7JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouGenin7JouKbn);
                this.columnShokenSetchishaGenin7JouKbn = new global::System.Data.DataColumn("ShokenSetchishaGenin7JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaGenin7JouKbn);
                this.columnShokenMekaGenin11JouKbn = new global::System.Data.DataColumn("ShokenMekaGenin11JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenMekaGenin11JouKbn);
                this.columnShokenKoujiGenin11JouKbn = new global::System.Data.DataColumn("ShokenKoujiGenin11JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenKoujiGenin11JouKbn);
                this.columnShokenHoshuGenin11JouKbn = new global::System.Data.DataColumn("ShokenHoshuGenin11JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHoshuGenin11JouKbn);
                this.columnShokenSeisouGenin11JouKbn = new global::System.Data.DataColumn("ShokenSeisouGenin11JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSeisouGenin11JouKbn);
                this.columnShokenSetchishaGenin11JouKbn = new global::System.Data.DataColumn("ShokenSetchishaGenin11JouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSetchishaGenin11JouKbn);
                this.columnShokenHyoujiIchiDaiCd = new global::System.Data.DataColumn("ShokenHyoujiIchiDaiCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyoujiIchiDaiCd);
                this.columnShokenHyoujiIchiChuCd = new global::System.Data.DataColumn("ShokenHyoujiIchiChuCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyoujiIchiChuCd);
                this.columnShokenHyoujiIchiShoCd = new global::System.Data.DataColumn("ShokenHyoujiIchiShoCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenHyoujiIchiShoCd);
                this.columnShokenSakujouKbn = new global::System.Data.DataColumn("ShokenSakujouKbn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenSakujouKbn);
                this.columnShokenGaikankensaCd = new global::System.Data.DataColumn("ShokenGaikankensaCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenGaikankensaCd);
                this.columnShokenTanisouchiCd = new global::System.Data.DataColumn("ShokenTanisouchiCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenTanisouchiCd);
                this.columnShokenBikou = new global::System.Data.DataColumn("ShokenBikou", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShokenBikou);
                this.columnInsertDt = new global::System.Data.DataColumn("InsertDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertDt);
                this.columnInsertUser = new global::System.Data.DataColumn("InsertUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertUser);
                this.columnInsertTarm = new global::System.Data.DataColumn("InsertTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTarm);
                this.columnUpdateDt = new global::System.Data.DataColumn("UpdateDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDt);
                this.columnUpdateUser = new global::System.Data.DataColumn("UpdateUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateUser);
                this.columnUpdateTarm = new global::System.Data.DataColumn("UpdateTarm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTarm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShokenKbn,
                                this.columnShokenCd}, true));
                this.columnShokenKbn.AllowDBNull = false;
                this.columnShokenKbn.MaxLength = 2;
                this.columnShokenCd.AllowDBNull = false;
                this.columnShokenCd.MaxLength = 3;
                this.columnShokenWd.AllowDBNull = false;
                this.columnShokenWd.MaxLength = 160;
                this.columnShokenRyakubun.AllowDBNull = false;
                this.columnShokenRyakubun.MaxLength = 40;
                this.columnShokenGaikankensaKoumokuCd.AllowDBNull = false;
                this.columnShokenGaikankensaKoumokuCd.MaxLength = 3;
                this.columnShokenGaikankensaKoumokuHandan.AllowDBNull = false;
                this.columnShokenGaikankensaKoumokuHandan.MaxLength = 1;
                this.columnShokenGaikankensaKoumokuJuyodo.AllowDBNull = false;
                this.columnShokenGaikankensaKoumokuJuyodo.MaxLength = 1;
                this.columnShokenGaikankensaKoumokuHantei.AllowDBNull = false;
                this.columnShokenGaikankensaKoumokuHantei.MaxLength = 1;
                this.columnShokenGyoseiHokokuLevel.AllowDBNull = false;
                this.columnShokenGyoseiHokokuLevel.MaxLength = 1;
                this.columnShokenMakerGenin7JouKbn.AllowDBNull = false;
                this.columnShokenMakerGenin7JouKbn.MaxLength = 1;
                this.columnShokenKoujiGenin7JouKbn.AllowDBNull = false;
                this.columnShokenKoujiGenin7JouKbn.MaxLength = 1;
                this.columnShokenHoshuGenin7JouKbn.AllowDBNull = false;
                this.columnShokenHoshuGenin7JouKbn.MaxLength = 1;
                this.columnShokenSeisouGenin7JouKbn.AllowDBNull = false;
                this.columnShokenSeisouGenin7JouKbn.MaxLength = 1;
                this.columnShokenSetchishaGenin7JouKbn.AllowDBNull = false;
                this.columnShokenSetchishaGenin7JouKbn.MaxLength = 1;
                this.columnShokenMekaGenin11JouKbn.AllowDBNull = false;
                this.columnShokenMekaGenin11JouKbn.MaxLength = 1;
                this.columnShokenKoujiGenin11JouKbn.AllowDBNull = false;
                this.columnShokenKoujiGenin11JouKbn.MaxLength = 1;
                this.columnShokenHoshuGenin11JouKbn.AllowDBNull = false;
                this.columnShokenHoshuGenin11JouKbn.MaxLength = 1;
                this.columnShokenSeisouGenin11JouKbn.AllowDBNull = false;
                this.columnShokenSeisouGenin11JouKbn.MaxLength = 1;
                this.columnShokenSetchishaGenin11JouKbn.AllowDBNull = false;
                this.columnShokenSetchishaGenin11JouKbn.MaxLength = 1;
                this.columnShokenHyoujiIchiDaiCd.AllowDBNull = false;
                this.columnShokenHyoujiIchiDaiCd.MaxLength = 3;
                this.columnShokenHyoujiIchiChuCd.AllowDBNull = false;
                this.columnShokenHyoujiIchiChuCd.MaxLength = 3;
                this.columnShokenHyoujiIchiShoCd.AllowDBNull = false;
                this.columnShokenHyoujiIchiShoCd.MaxLength = 3;
                this.columnShokenSakujouKbn.AllowDBNull = false;
                this.columnShokenSakujouKbn.MaxLength = 1;
                this.columnShokenGaikankensaCd.AllowDBNull = false;
                this.columnShokenGaikankensaCd.MaxLength = 3;
                this.columnShokenTanisouchiCd.AllowDBNull = false;
                this.columnShokenTanisouchiCd.MaxLength = 3;
                this.columnShokenBikou.AllowDBNull = false;
                this.columnShokenBikou.MaxLength = 100;
                this.columnInsertDt.AllowDBNull = false;
                this.columnInsertUser.AllowDBNull = false;
                this.columnInsertUser.MaxLength = 20;
                this.columnInsertTarm.AllowDBNull = false;
                this.columnInsertTarm.MaxLength = 20;
                this.columnUpdateDt.AllowDBNull = false;
                this.columnUpdateUser.AllowDBNull = false;
                this.columnUpdateUser.MaxLength = 20;
                this.columnUpdateTarm.AllowDBNull = false;
                this.columnUpdateTarm.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstRow NewShokenMstRow() {
                return ((ShokenMstRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShokenMstRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShokenMstRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShokenMstRowChanged != null)) {
                    this.ShokenMstRowChanged(this, new ShokenMstRowChangeEvent(((ShokenMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShokenMstRowChanging != null)) {
                    this.ShokenMstRowChanging(this, new ShokenMstRowChangeEvent(((ShokenMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShokenMstRowDeleted != null)) {
                    this.ShokenMstRowDeleted(this, new ShokenMstRowChangeEvent(((ShokenMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShokenMstRowDeleting != null)) {
                    this.ShokenMstRowDeleting(this, new ShokenMstRowChangeEvent(((ShokenMstRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveShokenMstRow(ShokenMstRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShokenMstDataSet ds = new ShokenMstDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShokenMstDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShokenMstRow : global::System.Data.DataRow {
            
            private ShokenMstDataTable tableShokenMst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ShokenMstRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShokenMst = ((ShokenMstDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenWd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenWdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenWdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenRyakubun {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenRyakubunColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenRyakubunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenGaikankensaKoumokuCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenGaikankensaKoumokuCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenGaikankensaKoumokuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenGaikankensaKoumokuHandan {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenGaikankensaKoumokuHandanColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenGaikankensaKoumokuHandanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenGaikankensaKoumokuJuyodo {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenGaikankensaKoumokuJuyodoColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenGaikankensaKoumokuJuyodoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenGaikankensaKoumokuHantei {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenGaikankensaKoumokuHanteiColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenGaikankensaKoumokuHanteiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenGyoseiHokokuLevel {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenGyoseiHokokuLevelColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenGyoseiHokokuLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMakerGenin7JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenMakerGenin7JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenMakerGenin7JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKoujiGenin7JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenKoujiGenin7JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenKoujiGenin7JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGenin7JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenHoshuGenin7JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenHoshuGenin7JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouGenin7JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenSeisouGenin7JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenSeisouGenin7JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaGenin7JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenSetchishaGenin7JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenSetchishaGenin7JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenMekaGenin11JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenMekaGenin11JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenMekaGenin11JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenKoujiGenin11JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenKoujiGenin11JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenKoujiGenin11JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHoshuGenin11JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenHoshuGenin11JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenHoshuGenin11JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSeisouGenin11JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenSeisouGenin11JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenSeisouGenin11JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSetchishaGenin11JouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenSetchishaGenin11JouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenSetchishaGenin11JouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHyoujiIchiDaiCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenHyoujiIchiDaiCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenHyoujiIchiDaiCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHyoujiIchiChuCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenHyoujiIchiChuCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenHyoujiIchiChuCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenHyoujiIchiShoCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenHyoujiIchiShoCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenHyoujiIchiShoCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenSakujouKbn {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenSakujouKbnColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenSakujouKbnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenGaikankensaCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenGaikankensaCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenGaikankensaCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenTanisouchiCd {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenTanisouchiCdColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenTanisouchiCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShokenBikou {
                get {
                    return ((string)(this[this.tableShokenMst.ShokenBikouColumn]));
                }
                set {
                    this[this.tableShokenMst.ShokenBikouColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenMst.InsertDtColumn]));
                }
                set {
                    this[this.tableShokenMst.InsertDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertUser {
                get {
                    return ((string)(this[this.tableShokenMst.InsertUserColumn]));
                }
                set {
                    this[this.tableShokenMst.InsertUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InsertTarm {
                get {
                    return ((string)(this[this.tableShokenMst.InsertTarmColumn]));
                }
                set {
                    this[this.tableShokenMst.InsertTarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UpdateDt {
                get {
                    return ((global::System.DateTime)(this[this.tableShokenMst.UpdateDtColumn]));
                }
                set {
                    this[this.tableShokenMst.UpdateDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateUser {
                get {
                    return ((string)(this[this.tableShokenMst.UpdateUserColumn]));
                }
                set {
                    this[this.tableShokenMst.UpdateUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdateTarm {
                get {
                    return ((string)(this[this.tableShokenMst.UpdateTarmColumn]));
                }
                set {
                    this[this.tableShokenMst.UpdateTarmColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ShokenMstRowChangeEvent : global::System.EventArgs {
            
            private ShokenMstRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstRowChangeEvent(ShokenMstRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ShokenMstRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FukjBizSystem.Application.DataSet.ShokenMstDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShokenMstTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ShokenMstTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShokenMst";
            tableMapping.ColumnMappings.Add("ShokenKbn", "ShokenKbn");
            tableMapping.ColumnMappings.Add("ShokenCd", "ShokenCd");
            tableMapping.ColumnMappings.Add("ShokenWd", "ShokenWd");
            tableMapping.ColumnMappings.Add("ShokenRyakubun", "ShokenRyakubun");
            tableMapping.ColumnMappings.Add("ShokenGaikankensaKoumokuCd", "ShokenGaikankensaKoumokuCd");
            tableMapping.ColumnMappings.Add("ShokenGaikankensaKoumokuHandan", "ShokenGaikankensaKoumokuHandan");
            tableMapping.ColumnMappings.Add("ShokenGaikankensaKoumokuJuyodo", "ShokenGaikankensaKoumokuJuyodo");
            tableMapping.ColumnMappings.Add("ShokenGaikankensaKoumokuHantei", "ShokenGaikankensaKoumokuHantei");
            tableMapping.ColumnMappings.Add("ShokenGyoseiHokokuLevel", "ShokenGyoseiHokokuLevel");
            tableMapping.ColumnMappings.Add("ShokenMakerGenin7JouKbn", "ShokenMakerGenin7JouKbn");
            tableMapping.ColumnMappings.Add("ShokenKoujiGenin7JouKbn", "ShokenKoujiGenin7JouKbn");
            tableMapping.ColumnMappings.Add("ShokenHoshuGenin7JouKbn", "ShokenHoshuGenin7JouKbn");
            tableMapping.ColumnMappings.Add("ShokenSeisouGenin7JouKbn", "ShokenSeisouGenin7JouKbn");
            tableMapping.ColumnMappings.Add("ShokenSetchishaGenin7JouKbn", "ShokenSetchishaGenin7JouKbn");
            tableMapping.ColumnMappings.Add("ShokenMekaGenin11JouKbn", "ShokenMekaGenin11JouKbn");
            tableMapping.ColumnMappings.Add("ShokenKoujiGenin11JouKbn", "ShokenKoujiGenin11JouKbn");
            tableMapping.ColumnMappings.Add("ShokenHoshuGenin11JouKbn", "ShokenHoshuGenin11JouKbn");
            tableMapping.ColumnMappings.Add("ShokenSeisouGenin11JouKbn", "ShokenSeisouGenin11JouKbn");
            tableMapping.ColumnMappings.Add("ShokenSetchishaGenin11JouKbn", "ShokenSetchishaGenin11JouKbn");
            tableMapping.ColumnMappings.Add("ShokenHyoujiIchiDaiCd", "ShokenHyoujiIchiDaiCd");
            tableMapping.ColumnMappings.Add("ShokenHyoujiIchiChuCd", "ShokenHyoujiIchiChuCd");
            tableMapping.ColumnMappings.Add("ShokenHyoujiIchiShoCd", "ShokenHyoujiIchiShoCd");
            tableMapping.ColumnMappings.Add("ShokenSakujouKbn", "ShokenSakujouKbn");
            tableMapping.ColumnMappings.Add("ShokenGaikankensaCd", "ShokenGaikankensaCd");
            tableMapping.ColumnMappings.Add("ShokenTanisouchiCd", "ShokenTanisouchiCd");
            tableMapping.ColumnMappings.Add("ShokenBikou", "ShokenBikou");
            tableMapping.ColumnMappings.Add("InsertDt", "InsertDt");
            tableMapping.ColumnMappings.Add("InsertUser", "InsertUser");
            tableMapping.ColumnMappings.Add("InsertTarm", "InsertTarm");
            tableMapping.ColumnMappings.Add("UpdateDt", "UpdateDt");
            tableMapping.ColumnMappings.Add("UpdateUser", "UpdateUser");
            tableMapping.ColumnMappings.Add("UpdateTarm", "UpdateTarm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ShokenMst] WHERE (([ShokenKbn] = @Original_ShokenKbn) AND ([ShokenCd" +
                "] = @Original_ShokenCd) AND ([ShokenWd] = @Original_ShokenWd) AND ([ShokenRyakub" +
                "un] = @Original_ShokenRyakubun) AND ([ShokenGaikankensaKoumokuCd] = @Original_Sh" +
                "okenGaikankensaKoumokuCd) AND ([ShokenGaikankensaKoumokuHandan] = @Original_Shok" +
                "enGaikankensaKoumokuHandan) AND ([ShokenGaikankensaKoumokuJuyodo] = @Original_Sh" +
                "okenGaikankensaKoumokuJuyodo) AND ([ShokenGaikankensaKoumokuHantei] = @Original_" +
                "ShokenGaikankensaKoumokuHantei) AND ([ShokenGyoseiHokokuLevel] = @Original_Shoke" +
                "nGyoseiHokokuLevel) AND ([ShokenMakerGenin7JouKbn] = @Original_ShokenMakerGenin7" +
                "JouKbn) AND ([ShokenKoujiGenin7JouKbn] = @Original_ShokenKoujiGenin7JouKbn) AND " +
                "([ShokenHoshuGenin7JouKbn] = @Original_ShokenHoshuGenin7JouKbn) AND ([ShokenSeis" +
                "ouGenin7JouKbn] = @Original_ShokenSeisouGenin7JouKbn) AND ([ShokenSetchishaGenin" +
                "7JouKbn] = @Original_ShokenSetchishaGenin7JouKbn) AND ([ShokenMekaGenin11JouKbn]" +
                " = @Original_ShokenMekaGenin11JouKbn) AND ([ShokenKoujiGenin11JouKbn] = @Origina" +
                "l_ShokenKoujiGenin11JouKbn) AND ([ShokenHoshuGenin11JouKbn] = @Original_ShokenHo" +
                "shuGenin11JouKbn) AND ([ShokenSeisouGenin11JouKbn] = @Original_ShokenSeisouGenin" +
                "11JouKbn) AND ([ShokenSetchishaGenin11JouKbn] = @Original_ShokenSetchishaGenin11" +
                "JouKbn) AND ([ShokenHyoujiIchiDaiCd] = @Original_ShokenHyoujiIchiDaiCd) AND ([Sh" +
                "okenHyoujiIchiChuCd] = @Original_ShokenHyoujiIchiChuCd) AND ([ShokenHyoujiIchiSh" +
                "oCd] = @Original_ShokenHyoujiIchiShoCd) AND ([ShokenSakujouKbn] = @Original_Shok" +
                "enSakujouKbn) AND ([ShokenGaikankensaCd] = @Original_ShokenGaikankensaCd) AND ([" +
                "ShokenTanisouchiCd] = @Original_ShokenTanisouchiCd) AND ([ShokenBikou] = @Origin" +
                "al_ShokenBikou) AND ([InsertDt] = @Original_InsertDt) AND ([InsertUser] = @Origi" +
                "nal_InsertUser) AND ([InsertTarm] = @Original_InsertTarm) AND ([UpdateDt] = @Ori" +
                "ginal_UpdateDt) AND ([UpdateUser] = @Original_UpdateUser) AND ([UpdateTarm] = @O" +
                "riginal_UpdateTarm))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenWd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenWd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenRyakubun", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenRyakubun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuHandan", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHandan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuJuyodo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuJuyodo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuHantei", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHantei", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGyoseiHokokuLevel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGyoseiHokokuLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenMakerGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKoujiGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisouGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSetchishaGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenMekaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMekaGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKoujiGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisouGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSetchishaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyoujiIchiDaiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiDaiCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyoujiIchiChuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiChuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyoujiIchiShoCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiShoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSakujouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSakujouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenTanisouchiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTanisouchiCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenBikou", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenBikou", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ShokenMst] ([ShokenKbn], [ShokenCd], [ShokenWd], [ShokenRyakubun], [" +
                "ShokenGaikankensaKoumokuCd], [ShokenGaikankensaKoumokuHandan], [ShokenGaikankens" +
                "aKoumokuJuyodo], [ShokenGaikankensaKoumokuHantei], [ShokenGyoseiHokokuLevel], [S" +
                "hokenMakerGenin7JouKbn], [ShokenKoujiGenin7JouKbn], [ShokenHoshuGenin7JouKbn], [" +
                "ShokenSeisouGenin7JouKbn], [ShokenSetchishaGenin7JouKbn], [ShokenMekaGenin11JouK" +
                "bn], [ShokenKoujiGenin11JouKbn], [ShokenHoshuGenin11JouKbn], [ShokenSeisouGenin1" +
                "1JouKbn], [ShokenSetchishaGenin11JouKbn], [ShokenHyoujiIchiDaiCd], [ShokenHyouji" +
                "IchiChuCd], [ShokenHyoujiIchiShoCd], [ShokenSakujouKbn], [ShokenGaikankensaCd], " +
                "[ShokenTanisouchiCd], [ShokenBikou], [InsertDt], [InsertUser], [InsertTarm], [Up" +
                "dateDt], [UpdateUser], [UpdateTarm]) VALUES (@ShokenKbn, @ShokenCd, @ShokenWd, @" +
                "ShokenRyakubun, @ShokenGaikankensaKoumokuCd, @ShokenGaikankensaKoumokuHandan, @S" +
                "hokenGaikankensaKoumokuJuyodo, @ShokenGaikankensaKoumokuHantei, @ShokenGyoseiHok" +
                "okuLevel, @ShokenMakerGenin7JouKbn, @ShokenKoujiGenin7JouKbn, @ShokenHoshuGenin7" +
                "JouKbn, @ShokenSeisouGenin7JouKbn, @ShokenSetchishaGenin7JouKbn, @ShokenMekaGeni" +
                "n11JouKbn, @ShokenKoujiGenin11JouKbn, @ShokenHoshuGenin11JouKbn, @ShokenSeisouGe" +
                "nin11JouKbn, @ShokenSetchishaGenin11JouKbn, @ShokenHyoujiIchiDaiCd, @ShokenHyouj" +
                "iIchiChuCd, @ShokenHyoujiIchiShoCd, @ShokenSakujouKbn, @ShokenGaikankensaCd, @Sh" +
                "okenTanisouchiCd, @ShokenBikou, @InsertDt, @InsertUser, @InsertTarm, @UpdateDt, " +
                "@UpdateUser, @UpdateTarm);\r\nSELECT ShokenKbn, ShokenCd, ShokenWd, ShokenRyakubun" +
                ", ShokenGaikankensaKoumokuCd, ShokenGaikankensaKoumokuHandan, ShokenGaikankensaK" +
                "oumokuJuyodo, ShokenGaikankensaKoumokuHantei, ShokenGyoseiHokokuLevel, ShokenMak" +
                "erGenin7JouKbn, ShokenKoujiGenin7JouKbn, ShokenHoshuGenin7JouKbn, ShokenSeisouGe" +
                "nin7JouKbn, ShokenSetchishaGenin7JouKbn, ShokenMekaGenin11JouKbn, ShokenKoujiGen" +
                "in11JouKbn, ShokenHoshuGenin11JouKbn, ShokenSeisouGenin11JouKbn, ShokenSetchisha" +
                "Genin11JouKbn, ShokenHyoujiIchiDaiCd, ShokenHyoujiIchiChuCd, ShokenHyoujiIchiSho" +
                "Cd, ShokenSakujouKbn, ShokenGaikankensaCd, ShokenTanisouchiCd, ShokenBikou, Inse" +
                "rtDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm FROM ShokenMst WH" +
                "ERE (ShokenCd = @ShokenCd) AND (ShokenKbn = @ShokenKbn)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenWd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenWd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenRyakubun", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenRyakubun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuHandan", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHandan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuJuyodo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuJuyodo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuHantei", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHantei", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGyoseiHokokuLevel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGyoseiHokokuLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenMakerGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKoujiGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisouGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSetchishaGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenMekaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMekaGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKoujiGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisouGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSetchishaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyoujiIchiDaiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiDaiCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyoujiIchiChuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiChuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyoujiIchiShoCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiShoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSakujouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSakujouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenTanisouchiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTanisouchiCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenBikou", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenBikou", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ShokenMst] SET [ShokenKbn] = @ShokenKbn, [ShokenCd] = @ShokenCd, [ShokenW" +
                "d] = @ShokenWd, [ShokenRyakubun] = @ShokenRyakubun, [ShokenGaikankensaKoumokuCd]" +
                " = @ShokenGaikankensaKoumokuCd, [ShokenGaikankensaKoumokuHandan] = @ShokenGaikan" +
                "kensaKoumokuHandan, [ShokenGaikankensaKoumokuJuyodo] = @ShokenGaikankensaKoumoku" +
                "Juyodo, [ShokenGaikankensaKoumokuHantei] = @ShokenGaikankensaKoumokuHantei, [Sho" +
                "kenGyoseiHokokuLevel] = @ShokenGyoseiHokokuLevel, [ShokenMakerGenin7JouKbn] = @S" +
                "hokenMakerGenin7JouKbn, [ShokenKoujiGenin7JouKbn] = @ShokenKoujiGenin7JouKbn, [S" +
                "hokenHoshuGenin7JouKbn] = @ShokenHoshuGenin7JouKbn, [ShokenSeisouGenin7JouKbn] =" +
                " @ShokenSeisouGenin7JouKbn, [ShokenSetchishaGenin7JouKbn] = @ShokenSetchishaGeni" +
                "n7JouKbn, [ShokenMekaGenin11JouKbn] = @ShokenMekaGenin11JouKbn, [ShokenKoujiGeni" +
                "n11JouKbn] = @ShokenKoujiGenin11JouKbn, [ShokenHoshuGenin11JouKbn] = @ShokenHosh" +
                "uGenin11JouKbn, [ShokenSeisouGenin11JouKbn] = @ShokenSeisouGenin11JouKbn, [Shoke" +
                "nSetchishaGenin11JouKbn] = @ShokenSetchishaGenin11JouKbn, [ShokenHyoujiIchiDaiCd" +
                "] = @ShokenHyoujiIchiDaiCd, [ShokenHyoujiIchiChuCd] = @ShokenHyoujiIchiChuCd, [S" +
                "hokenHyoujiIchiShoCd] = @ShokenHyoujiIchiShoCd, [ShokenSakujouKbn] = @ShokenSaku" +
                "jouKbn, [ShokenGaikankensaCd] = @ShokenGaikankensaCd, [ShokenTanisouchiCd] = @Sh" +
                "okenTanisouchiCd, [ShokenBikou] = @ShokenBikou, [InsertDt] = @InsertDt, [InsertU" +
                "ser] = @InsertUser, [InsertTarm] = @InsertTarm, [UpdateDt] = @UpdateDt, [UpdateU" +
                "ser] = @UpdateUser, [UpdateTarm] = @UpdateTarm WHERE (([ShokenKbn] = @Original_S" +
                "hokenKbn) AND ([ShokenCd] = @Original_ShokenCd) AND ([ShokenWd] = @Original_Shok" +
                "enWd) AND ([ShokenRyakubun] = @Original_ShokenRyakubun) AND ([ShokenGaikankensaK" +
                "oumokuCd] = @Original_ShokenGaikankensaKoumokuCd) AND ([ShokenGaikankensaKoumoku" +
                "Handan] = @Original_ShokenGaikankensaKoumokuHandan) AND ([ShokenGaikankensaKoumo" +
                "kuJuyodo] = @Original_ShokenGaikankensaKoumokuJuyodo) AND ([ShokenGaikankensaKou" +
                "mokuHantei] = @Original_ShokenGaikankensaKoumokuHantei) AND ([ShokenGyoseiHokoku" +
                "Level] = @Original_ShokenGyoseiHokokuLevel) AND ([ShokenMakerGenin7JouKbn] = @Or" +
                "iginal_ShokenMakerGenin7JouKbn) AND ([ShokenKoujiGenin7JouKbn] = @Original_Shoke" +
                "nKoujiGenin7JouKbn) AND ([ShokenHoshuGenin7JouKbn] = @Original_ShokenHoshuGenin7" +
                "JouKbn) AND ([ShokenSeisouGenin7JouKbn] = @Original_ShokenSeisouGenin7JouKbn) AN" +
                "D ([ShokenSetchishaGenin7JouKbn] = @Original_ShokenSetchishaGenin7JouKbn) AND ([" +
                "ShokenMekaGenin11JouKbn] = @Original_ShokenMekaGenin11JouKbn) AND ([ShokenKoujiG" +
                "enin11JouKbn] = @Original_ShokenKoujiGenin11JouKbn) AND ([ShokenHoshuGenin11JouK" +
                "bn] = @Original_ShokenHoshuGenin11JouKbn) AND ([ShokenSeisouGenin11JouKbn] = @Or" +
                "iginal_ShokenSeisouGenin11JouKbn) AND ([ShokenSetchishaGenin11JouKbn] = @Origina" +
                "l_ShokenSetchishaGenin11JouKbn) AND ([ShokenHyoujiIchiDaiCd] = @Original_ShokenH" +
                "youjiIchiDaiCd) AND ([ShokenHyoujiIchiChuCd] = @Original_ShokenHyoujiIchiChuCd) " +
                "AND ([ShokenHyoujiIchiShoCd] = @Original_ShokenHyoujiIchiShoCd) AND ([ShokenSaku" +
                "jouKbn] = @Original_ShokenSakujouKbn) AND ([ShokenGaikankensaCd] = @Original_Sho" +
                "kenGaikankensaCd) AND ([ShokenTanisouchiCd] = @Original_ShokenTanisouchiCd) AND " +
                "([ShokenBikou] = @Original_ShokenBikou) AND ([InsertDt] = @Original_InsertDt) AN" +
                "D ([InsertUser] = @Original_InsertUser) AND ([InsertTarm] = @Original_InsertTarm" +
                ") AND ([UpdateDt] = @Original_UpdateDt) AND ([UpdateUser] = @Original_UpdateUser" +
                ") AND ([UpdateTarm] = @Original_UpdateTarm));\r\nSELECT ShokenKbn, ShokenCd, Shoke" +
                "nWd, ShokenRyakubun, ShokenGaikankensaKoumokuCd, ShokenGaikankensaKoumokuHandan," +
                " ShokenGaikankensaKoumokuJuyodo, ShokenGaikankensaKoumokuHantei, ShokenGyoseiHok" +
                "okuLevel, ShokenMakerGenin7JouKbn, ShokenKoujiGenin7JouKbn, ShokenHoshuGenin7Jou" +
                "Kbn, ShokenSeisouGenin7JouKbn, ShokenSetchishaGenin7JouKbn, ShokenMekaGenin11Jou" +
                "Kbn, ShokenKoujiGenin11JouKbn, ShokenHoshuGenin11JouKbn, ShokenSeisouGenin11JouK" +
                "bn, ShokenSetchishaGenin11JouKbn, ShokenHyoujiIchiDaiCd, ShokenHyoujiIchiChuCd, " +
                "ShokenHyoujiIchiShoCd, ShokenSakujouKbn, ShokenGaikankensaCd, ShokenTanisouchiCd" +
                ", ShokenBikou, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTar" +
                "m FROM ShokenMst WHERE (ShokenCd = @ShokenCd) AND (ShokenKbn = @ShokenKbn)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenWd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenWd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenRyakubun", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenRyakubun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuHandan", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHandan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuJuyodo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuJuyodo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaKoumokuHantei", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHantei", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGyoseiHokokuLevel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGyoseiHokokuLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenMakerGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKoujiGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisouGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSetchishaGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin7JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenMekaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMekaGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenKoujiGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHoshuGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSeisouGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSetchishaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin11JouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyoujiIchiDaiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiDaiCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyoujiIchiChuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiChuCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenHyoujiIchiShoCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiShoCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenSakujouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSakujouKbn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenGaikankensaCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenTanisouchiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTanisouchiCd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShokenBikou", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenBikou", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenWd", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenWd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenRyakubun", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenRyakubun", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuHandan", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHandan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuJuyodo", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuJuyodo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaKoumokuHantei", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaKoumokuHantei", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGyoseiHokokuLevel", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGyoseiHokokuLevel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenMakerGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMakerGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKoujiGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisouGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSetchishaGenin7JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin7JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenMekaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenMekaGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenKoujiGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenKoujiGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHoshuGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHoshuGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSeisouGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSeisouGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSetchishaGenin11JouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSetchishaGenin11JouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyoujiIchiDaiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiDaiCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyoujiIchiChuCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiChuCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenHyoujiIchiShoCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenHyoujiIchiShoCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenSakujouKbn", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenSakujouKbn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenGaikankensaCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenGaikankensaCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenTanisouchiCd", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenTanisouchiCd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShokenBikou", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShokenBikou", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InsertTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateDt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateUser", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateUser", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdateTarm", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateTarm", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::FukjBizSystem.Properties.Settings.Default.FukjBizSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT
  ShokenKbn
  , ShokenCd
  , ShokenWd
  , ShokenRyakubun
  , ShokenGaikankensaKoumokuCd
  , ShokenGaikankensaKoumokuHandan
  , ShokenGaikankensaKoumokuJuyodo
  , ShokenGaikankensaKoumokuHantei
  , ShokenGyoseiHokokuLevel
  , ShokenMakerGenin7JouKbn
  , ShokenKoujiGenin7JouKbn
  , ShokenHoshuGenin7JouKbn
  , ShokenSeisouGenin7JouKbn
  , ShokenSetchishaGenin7JouKbn
  , ShokenMekaGenin11JouKbn
  , ShokenKoujiGenin11JouKbn
  , ShokenHoshuGenin11JouKbn
  , ShokenSeisouGenin11JouKbn
  , ShokenSetchishaGenin11JouKbn
  , ShokenHyoujiIchiDaiCd
  , ShokenHyoujiIchiChuCd
  , ShokenHyoujiIchiShoCd
  , ShokenSakujouKbn
  , ShokenGaikankensaCd
  , ShokenTanisouchiCd
  , ShokenBikou
  , InsertDt
  , InsertUser
  , InsertTarm
  , UpdateDt
  , UpdateUser
  , UpdateTarm 
FROM
  ShokenMst
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShokenMstDataSet.ShokenMstDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShokenMstDataSet.ShokenMstDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShokenMstDataSet.ShokenMstDataTable dataTable = new ShokenMstDataSet.ShokenMstDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokenMstDataSet.ShokenMstDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ShokenMstDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ShokenMst");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ShokenKbn, 
                    string Original_ShokenCd, 
                    string Original_ShokenWd, 
                    string Original_ShokenRyakubun, 
                    string Original_ShokenGaikankensaKoumokuCd, 
                    string Original_ShokenGaikankensaKoumokuHandan, 
                    string Original_ShokenGaikankensaKoumokuJuyodo, 
                    string Original_ShokenGaikankensaKoumokuHantei, 
                    string Original_ShokenGyoseiHokokuLevel, 
                    string Original_ShokenMakerGenin7JouKbn, 
                    string Original_ShokenKoujiGenin7JouKbn, 
                    string Original_ShokenHoshuGenin7JouKbn, 
                    string Original_ShokenSeisouGenin7JouKbn, 
                    string Original_ShokenSetchishaGenin7JouKbn, 
                    string Original_ShokenMekaGenin11JouKbn, 
                    string Original_ShokenKoujiGenin11JouKbn, 
                    string Original_ShokenHoshuGenin11JouKbn, 
                    string Original_ShokenSeisouGenin11JouKbn, 
                    string Original_ShokenSetchishaGenin11JouKbn, 
                    string Original_ShokenHyoujiIchiDaiCd, 
                    string Original_ShokenHyoujiIchiChuCd, 
                    string Original_ShokenHyoujiIchiShoCd, 
                    string Original_ShokenSakujouKbn, 
                    string Original_ShokenGaikankensaCd, 
                    string Original_ShokenTanisouchiCd, 
                    string Original_ShokenBikou, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((Original_ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ShokenKbn));
            }
            if ((Original_ShokenCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ShokenCd));
            }
            if ((Original_ShokenWd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenWd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ShokenWd));
            }
            if ((Original_ShokenRyakubun == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenRyakubun");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ShokenRyakubun));
            }
            if ((Original_ShokenGaikankensaKoumokuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ShokenGaikankensaKoumokuCd));
            }
            if ((Original_ShokenGaikankensaKoumokuHandan == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuHandan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ShokenGaikankensaKoumokuHandan));
            }
            if ((Original_ShokenGaikankensaKoumokuJuyodo == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuJuyodo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ShokenGaikankensaKoumokuJuyodo));
            }
            if ((Original_ShokenGaikankensaKoumokuHantei == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuHantei");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ShokenGaikankensaKoumokuHantei));
            }
            if ((Original_ShokenGyoseiHokokuLevel == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGyoseiHokokuLevel");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ShokenGyoseiHokokuLevel));
            }
            if ((Original_ShokenMakerGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenMakerGenin7JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ShokenMakerGenin7JouKbn));
            }
            if ((Original_ShokenKoujiGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKoujiGenin7JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ShokenKoujiGenin7JouKbn));
            }
            if ((Original_ShokenHoshuGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHoshuGenin7JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ShokenHoshuGenin7JouKbn));
            }
            if ((Original_ShokenSeisouGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSeisouGenin7JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ShokenSeisouGenin7JouKbn));
            }
            if ((Original_ShokenSetchishaGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSetchishaGenin7JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ShokenSetchishaGenin7JouKbn));
            }
            if ((Original_ShokenMekaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenMekaGenin11JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ShokenMekaGenin11JouKbn));
            }
            if ((Original_ShokenKoujiGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKoujiGenin11JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ShokenKoujiGenin11JouKbn));
            }
            if ((Original_ShokenHoshuGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHoshuGenin11JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ShokenHoshuGenin11JouKbn));
            }
            if ((Original_ShokenSeisouGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSeisouGenin11JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ShokenSeisouGenin11JouKbn));
            }
            if ((Original_ShokenSetchishaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSetchishaGenin11JouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ShokenSetchishaGenin11JouKbn));
            }
            if ((Original_ShokenHyoujiIchiDaiCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHyoujiIchiDaiCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ShokenHyoujiIchiDaiCd));
            }
            if ((Original_ShokenHyoujiIchiChuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHyoujiIchiChuCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_ShokenHyoujiIchiChuCd));
            }
            if ((Original_ShokenHyoujiIchiShoCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHyoujiIchiShoCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_ShokenHyoujiIchiShoCd));
            }
            if ((Original_ShokenSakujouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSakujouKbn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_ShokenSakujouKbn));
            }
            if ((Original_ShokenGaikankensaCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ShokenGaikankensaCd));
            }
            if ((Original_ShokenTanisouchiCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenTanisouchiCd");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ShokenTanisouchiCd));
            }
            if ((Original_ShokenBikou == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenBikou");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_ShokenBikou));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ShokenKbn, 
                    string ShokenCd, 
                    string ShokenWd, 
                    string ShokenRyakubun, 
                    string ShokenGaikankensaKoumokuCd, 
                    string ShokenGaikankensaKoumokuHandan, 
                    string ShokenGaikankensaKoumokuJuyodo, 
                    string ShokenGaikankensaKoumokuHantei, 
                    string ShokenGyoseiHokokuLevel, 
                    string ShokenMakerGenin7JouKbn, 
                    string ShokenKoujiGenin7JouKbn, 
                    string ShokenHoshuGenin7JouKbn, 
                    string ShokenSeisouGenin7JouKbn, 
                    string ShokenSetchishaGenin7JouKbn, 
                    string ShokenMekaGenin11JouKbn, 
                    string ShokenKoujiGenin11JouKbn, 
                    string ShokenHoshuGenin11JouKbn, 
                    string ShokenSeisouGenin11JouKbn, 
                    string ShokenSetchishaGenin11JouKbn, 
                    string ShokenHyoujiIchiDaiCd, 
                    string ShokenHyoujiIchiChuCd, 
                    string ShokenHyoujiIchiShoCd, 
                    string ShokenSakujouKbn, 
                    string ShokenGaikankensaCd, 
                    string ShokenTanisouchiCd, 
                    string ShokenBikou, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm) {
            if ((ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ShokenKbn));
            }
            if ((ShokenCd == null)) {
                throw new global::System.ArgumentNullException("ShokenCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ShokenCd));
            }
            if ((ShokenWd == null)) {
                throw new global::System.ArgumentNullException("ShokenWd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ShokenWd));
            }
            if ((ShokenRyakubun == null)) {
                throw new global::System.ArgumentNullException("ShokenRyakubun");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ShokenRyakubun));
            }
            if ((ShokenGaikankensaKoumokuCd == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ShokenGaikankensaKoumokuCd));
            }
            if ((ShokenGaikankensaKoumokuHandan == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuHandan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ShokenGaikankensaKoumokuHandan));
            }
            if ((ShokenGaikankensaKoumokuJuyodo == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuJuyodo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ShokenGaikankensaKoumokuJuyodo));
            }
            if ((ShokenGaikankensaKoumokuHantei == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuHantei");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ShokenGaikankensaKoumokuHantei));
            }
            if ((ShokenGyoseiHokokuLevel == null)) {
                throw new global::System.ArgumentNullException("ShokenGyoseiHokokuLevel");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ShokenGyoseiHokokuLevel));
            }
            if ((ShokenMakerGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenMakerGenin7JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ShokenMakerGenin7JouKbn));
            }
            if ((ShokenKoujiGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKoujiGenin7JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ShokenKoujiGenin7JouKbn));
            }
            if ((ShokenHoshuGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenHoshuGenin7JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ShokenHoshuGenin7JouKbn));
            }
            if ((ShokenSeisouGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSeisouGenin7JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ShokenSeisouGenin7JouKbn));
            }
            if ((ShokenSetchishaGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSetchishaGenin7JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ShokenSetchishaGenin7JouKbn));
            }
            if ((ShokenMekaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenMekaGenin11JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ShokenMekaGenin11JouKbn));
            }
            if ((ShokenKoujiGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKoujiGenin11JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ShokenKoujiGenin11JouKbn));
            }
            if ((ShokenHoshuGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenHoshuGenin11JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ShokenHoshuGenin11JouKbn));
            }
            if ((ShokenSeisouGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSeisouGenin11JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ShokenSeisouGenin11JouKbn));
            }
            if ((ShokenSetchishaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSetchishaGenin11JouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ShokenSetchishaGenin11JouKbn));
            }
            if ((ShokenHyoujiIchiDaiCd == null)) {
                throw new global::System.ArgumentNullException("ShokenHyoujiIchiDaiCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ShokenHyoujiIchiDaiCd));
            }
            if ((ShokenHyoujiIchiChuCd == null)) {
                throw new global::System.ArgumentNullException("ShokenHyoujiIchiChuCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ShokenHyoujiIchiChuCd));
            }
            if ((ShokenHyoujiIchiShoCd == null)) {
                throw new global::System.ArgumentNullException("ShokenHyoujiIchiShoCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(ShokenHyoujiIchiShoCd));
            }
            if ((ShokenSakujouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSakujouKbn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(ShokenSakujouKbn));
            }
            if ((ShokenGaikankensaCd == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(ShokenGaikankensaCd));
            }
            if ((ShokenTanisouchiCd == null)) {
                throw new global::System.ArgumentNullException("ShokenTanisouchiCd");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(ShokenTanisouchiCd));
            }
            if ((ShokenBikou == null)) {
                throw new global::System.ArgumentNullException("ShokenBikou");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(ShokenBikou));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(InsertTarm));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ShokenKbn, 
                    string ShokenCd, 
                    string ShokenWd, 
                    string ShokenRyakubun, 
                    string ShokenGaikankensaKoumokuCd, 
                    string ShokenGaikankensaKoumokuHandan, 
                    string ShokenGaikankensaKoumokuJuyodo, 
                    string ShokenGaikankensaKoumokuHantei, 
                    string ShokenGyoseiHokokuLevel, 
                    string ShokenMakerGenin7JouKbn, 
                    string ShokenKoujiGenin7JouKbn, 
                    string ShokenHoshuGenin7JouKbn, 
                    string ShokenSeisouGenin7JouKbn, 
                    string ShokenSetchishaGenin7JouKbn, 
                    string ShokenMekaGenin11JouKbn, 
                    string ShokenKoujiGenin11JouKbn, 
                    string ShokenHoshuGenin11JouKbn, 
                    string ShokenSeisouGenin11JouKbn, 
                    string ShokenSetchishaGenin11JouKbn, 
                    string ShokenHyoujiIchiDaiCd, 
                    string ShokenHyoujiIchiChuCd, 
                    string ShokenHyoujiIchiShoCd, 
                    string ShokenSakujouKbn, 
                    string ShokenGaikankensaCd, 
                    string ShokenTanisouchiCd, 
                    string ShokenBikou, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_ShokenKbn, 
                    string Original_ShokenCd, 
                    string Original_ShokenWd, 
                    string Original_ShokenRyakubun, 
                    string Original_ShokenGaikankensaKoumokuCd, 
                    string Original_ShokenGaikankensaKoumokuHandan, 
                    string Original_ShokenGaikankensaKoumokuJuyodo, 
                    string Original_ShokenGaikankensaKoumokuHantei, 
                    string Original_ShokenGyoseiHokokuLevel, 
                    string Original_ShokenMakerGenin7JouKbn, 
                    string Original_ShokenKoujiGenin7JouKbn, 
                    string Original_ShokenHoshuGenin7JouKbn, 
                    string Original_ShokenSeisouGenin7JouKbn, 
                    string Original_ShokenSetchishaGenin7JouKbn, 
                    string Original_ShokenMekaGenin11JouKbn, 
                    string Original_ShokenKoujiGenin11JouKbn, 
                    string Original_ShokenHoshuGenin11JouKbn, 
                    string Original_ShokenSeisouGenin11JouKbn, 
                    string Original_ShokenSetchishaGenin11JouKbn, 
                    string Original_ShokenHyoujiIchiDaiCd, 
                    string Original_ShokenHyoujiIchiChuCd, 
                    string Original_ShokenHyoujiIchiShoCd, 
                    string Original_ShokenSakujouKbn, 
                    string Original_ShokenGaikankensaCd, 
                    string Original_ShokenTanisouchiCd, 
                    string Original_ShokenBikou, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            if ((ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ShokenKbn));
            }
            if ((ShokenCd == null)) {
                throw new global::System.ArgumentNullException("ShokenCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ShokenCd));
            }
            if ((ShokenWd == null)) {
                throw new global::System.ArgumentNullException("ShokenWd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ShokenWd));
            }
            if ((ShokenRyakubun == null)) {
                throw new global::System.ArgumentNullException("ShokenRyakubun");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ShokenRyakubun));
            }
            if ((ShokenGaikankensaKoumokuCd == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ShokenGaikankensaKoumokuCd));
            }
            if ((ShokenGaikankensaKoumokuHandan == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuHandan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ShokenGaikankensaKoumokuHandan));
            }
            if ((ShokenGaikankensaKoumokuJuyodo == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuJuyodo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ShokenGaikankensaKoumokuJuyodo));
            }
            if ((ShokenGaikankensaKoumokuHantei == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaKoumokuHantei");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ShokenGaikankensaKoumokuHantei));
            }
            if ((ShokenGyoseiHokokuLevel == null)) {
                throw new global::System.ArgumentNullException("ShokenGyoseiHokokuLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ShokenGyoseiHokokuLevel));
            }
            if ((ShokenMakerGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenMakerGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(ShokenMakerGenin7JouKbn));
            }
            if ((ShokenKoujiGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKoujiGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ShokenKoujiGenin7JouKbn));
            }
            if ((ShokenHoshuGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenHoshuGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ShokenHoshuGenin7JouKbn));
            }
            if ((ShokenSeisouGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSeisouGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ShokenSeisouGenin7JouKbn));
            }
            if ((ShokenSetchishaGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSetchishaGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ShokenSetchishaGenin7JouKbn));
            }
            if ((ShokenMekaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenMekaGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ShokenMekaGenin11JouKbn));
            }
            if ((ShokenKoujiGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenKoujiGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ShokenKoujiGenin11JouKbn));
            }
            if ((ShokenHoshuGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenHoshuGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ShokenHoshuGenin11JouKbn));
            }
            if ((ShokenSeisouGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSeisouGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ShokenSeisouGenin11JouKbn));
            }
            if ((ShokenSetchishaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSetchishaGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ShokenSetchishaGenin11JouKbn));
            }
            if ((ShokenHyoujiIchiDaiCd == null)) {
                throw new global::System.ArgumentNullException("ShokenHyoujiIchiDaiCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(ShokenHyoujiIchiDaiCd));
            }
            if ((ShokenHyoujiIchiChuCd == null)) {
                throw new global::System.ArgumentNullException("ShokenHyoujiIchiChuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ShokenHyoujiIchiChuCd));
            }
            if ((ShokenHyoujiIchiShoCd == null)) {
                throw new global::System.ArgumentNullException("ShokenHyoujiIchiShoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(ShokenHyoujiIchiShoCd));
            }
            if ((ShokenSakujouKbn == null)) {
                throw new global::System.ArgumentNullException("ShokenSakujouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(ShokenSakujouKbn));
            }
            if ((ShokenGaikankensaCd == null)) {
                throw new global::System.ArgumentNullException("ShokenGaikankensaCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(ShokenGaikankensaCd));
            }
            if ((ShokenTanisouchiCd == null)) {
                throw new global::System.ArgumentNullException("ShokenTanisouchiCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(ShokenTanisouchiCd));
            }
            if ((ShokenBikou == null)) {
                throw new global::System.ArgumentNullException("ShokenBikou");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(ShokenBikou));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(InsertDt));
            if ((InsertUser == null)) {
                throw new global::System.ArgumentNullException("InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(InsertUser));
            }
            if ((InsertTarm == null)) {
                throw new global::System.ArgumentNullException("InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(UpdateDt));
            if ((UpdateUser == null)) {
                throw new global::System.ArgumentNullException("UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(UpdateUser));
            }
            if ((UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(UpdateTarm));
            }
            if ((Original_ShokenKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ShokenKbn));
            }
            if ((Original_ShokenCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ShokenCd));
            }
            if ((Original_ShokenWd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenWd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_ShokenWd));
            }
            if ((Original_ShokenRyakubun == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenRyakubun");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_ShokenRyakubun));
            }
            if ((Original_ShokenGaikankensaKoumokuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ShokenGaikankensaKoumokuCd));
            }
            if ((Original_ShokenGaikankensaKoumokuHandan == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuHandan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_ShokenGaikankensaKoumokuHandan));
            }
            if ((Original_ShokenGaikankensaKoumokuJuyodo == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuJuyodo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_ShokenGaikankensaKoumokuJuyodo));
            }
            if ((Original_ShokenGaikankensaKoumokuHantei == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaKoumokuHantei");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_ShokenGaikankensaKoumokuHantei));
            }
            if ((Original_ShokenGyoseiHokokuLevel == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGyoseiHokokuLevel");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_ShokenGyoseiHokokuLevel));
            }
            if ((Original_ShokenMakerGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenMakerGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_ShokenMakerGenin7JouKbn));
            }
            if ((Original_ShokenKoujiGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKoujiGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_ShokenKoujiGenin7JouKbn));
            }
            if ((Original_ShokenHoshuGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHoshuGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_ShokenHoshuGenin7JouKbn));
            }
            if ((Original_ShokenSeisouGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSeisouGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_ShokenSeisouGenin7JouKbn));
            }
            if ((Original_ShokenSetchishaGenin7JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSetchishaGenin7JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_ShokenSetchishaGenin7JouKbn));
            }
            if ((Original_ShokenMekaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenMekaGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_ShokenMekaGenin11JouKbn));
            }
            if ((Original_ShokenKoujiGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenKoujiGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_ShokenKoujiGenin11JouKbn));
            }
            if ((Original_ShokenHoshuGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHoshuGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ShokenHoshuGenin11JouKbn));
            }
            if ((Original_ShokenSeisouGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSeisouGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_ShokenSeisouGenin11JouKbn));
            }
            if ((Original_ShokenSetchishaGenin11JouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSetchishaGenin11JouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_ShokenSetchishaGenin11JouKbn));
            }
            if ((Original_ShokenHyoujiIchiDaiCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHyoujiIchiDaiCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_ShokenHyoujiIchiDaiCd));
            }
            if ((Original_ShokenHyoujiIchiChuCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHyoujiIchiChuCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_ShokenHyoujiIchiChuCd));
            }
            if ((Original_ShokenHyoujiIchiShoCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenHyoujiIchiShoCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_ShokenHyoujiIchiShoCd));
            }
            if ((Original_ShokenSakujouKbn == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenSakujouKbn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_ShokenSakujouKbn));
            }
            if ((Original_ShokenGaikankensaCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenGaikankensaCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_ShokenGaikankensaCd));
            }
            if ((Original_ShokenTanisouchiCd == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenTanisouchiCd");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ShokenTanisouchiCd));
            }
            if ((Original_ShokenBikou == null)) {
                throw new global::System.ArgumentNullException("Original_ShokenBikou");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_ShokenBikou));
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(Original_InsertDt));
            if ((Original_InsertUser == null)) {
                throw new global::System.ArgumentNullException("Original_InsertUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_InsertUser));
            }
            if ((Original_InsertTarm == null)) {
                throw new global::System.ArgumentNullException("Original_InsertTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_InsertTarm));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(Original_UpdateDt));
            if ((Original_UpdateUser == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateUser");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_UpdateUser));
            }
            if ((Original_UpdateTarm == null)) {
                throw new global::System.ArgumentNullException("Original_UpdateTarm");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_UpdateTarm));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ShokenWd, 
                    string ShokenRyakubun, 
                    string ShokenGaikankensaKoumokuCd, 
                    string ShokenGaikankensaKoumokuHandan, 
                    string ShokenGaikankensaKoumokuJuyodo, 
                    string ShokenGaikankensaKoumokuHantei, 
                    string ShokenGyoseiHokokuLevel, 
                    string ShokenMakerGenin7JouKbn, 
                    string ShokenKoujiGenin7JouKbn, 
                    string ShokenHoshuGenin7JouKbn, 
                    string ShokenSeisouGenin7JouKbn, 
                    string ShokenSetchishaGenin7JouKbn, 
                    string ShokenMekaGenin11JouKbn, 
                    string ShokenKoujiGenin11JouKbn, 
                    string ShokenHoshuGenin11JouKbn, 
                    string ShokenSeisouGenin11JouKbn, 
                    string ShokenSetchishaGenin11JouKbn, 
                    string ShokenHyoujiIchiDaiCd, 
                    string ShokenHyoujiIchiChuCd, 
                    string ShokenHyoujiIchiShoCd, 
                    string ShokenSakujouKbn, 
                    string ShokenGaikankensaCd, 
                    string ShokenTanisouchiCd, 
                    string ShokenBikou, 
                    System.DateTime InsertDt, 
                    string InsertUser, 
                    string InsertTarm, 
                    System.DateTime UpdateDt, 
                    string UpdateUser, 
                    string UpdateTarm, 
                    string Original_ShokenKbn, 
                    string Original_ShokenCd, 
                    string Original_ShokenWd, 
                    string Original_ShokenRyakubun, 
                    string Original_ShokenGaikankensaKoumokuCd, 
                    string Original_ShokenGaikankensaKoumokuHandan, 
                    string Original_ShokenGaikankensaKoumokuJuyodo, 
                    string Original_ShokenGaikankensaKoumokuHantei, 
                    string Original_ShokenGyoseiHokokuLevel, 
                    string Original_ShokenMakerGenin7JouKbn, 
                    string Original_ShokenKoujiGenin7JouKbn, 
                    string Original_ShokenHoshuGenin7JouKbn, 
                    string Original_ShokenSeisouGenin7JouKbn, 
                    string Original_ShokenSetchishaGenin7JouKbn, 
                    string Original_ShokenMekaGenin11JouKbn, 
                    string Original_ShokenKoujiGenin11JouKbn, 
                    string Original_ShokenHoshuGenin11JouKbn, 
                    string Original_ShokenSeisouGenin11JouKbn, 
                    string Original_ShokenSetchishaGenin11JouKbn, 
                    string Original_ShokenHyoujiIchiDaiCd, 
                    string Original_ShokenHyoujiIchiChuCd, 
                    string Original_ShokenHyoujiIchiShoCd, 
                    string Original_ShokenSakujouKbn, 
                    string Original_ShokenGaikankensaCd, 
                    string Original_ShokenTanisouchiCd, 
                    string Original_ShokenBikou, 
                    System.DateTime Original_InsertDt, 
                    string Original_InsertUser, 
                    string Original_InsertTarm, 
                    System.DateTime Original_UpdateDt, 
                    string Original_UpdateUser, 
                    string Original_UpdateTarm) {
            return this.Update(Original_ShokenKbn, Original_ShokenCd, ShokenWd, ShokenRyakubun, ShokenGaikankensaKoumokuCd, ShokenGaikankensaKoumokuHandan, ShokenGaikankensaKoumokuJuyodo, ShokenGaikankensaKoumokuHantei, ShokenGyoseiHokokuLevel, ShokenMakerGenin7JouKbn, ShokenKoujiGenin7JouKbn, ShokenHoshuGenin7JouKbn, ShokenSeisouGenin7JouKbn, ShokenSetchishaGenin7JouKbn, ShokenMekaGenin11JouKbn, ShokenKoujiGenin11JouKbn, ShokenHoshuGenin11JouKbn, ShokenSeisouGenin11JouKbn, ShokenSetchishaGenin11JouKbn, ShokenHyoujiIchiDaiCd, ShokenHyoujiIchiChuCd, ShokenHyoujiIchiShoCd, ShokenSakujouKbn, ShokenGaikankensaCd, ShokenTanisouchiCd, ShokenBikou, InsertDt, InsertUser, InsertTarm, UpdateDt, UpdateUser, UpdateTarm, Original_ShokenKbn, Original_ShokenCd, Original_ShokenWd, Original_ShokenRyakubun, Original_ShokenGaikankensaKoumokuCd, Original_ShokenGaikankensaKoumokuHandan, Original_ShokenGaikankensaKoumokuJuyodo, Original_ShokenGaikankensaKoumokuHantei, Original_ShokenGyoseiHokokuLevel, Original_ShokenMakerGenin7JouKbn, Original_ShokenKoujiGenin7JouKbn, Original_ShokenHoshuGenin7JouKbn, Original_ShokenSeisouGenin7JouKbn, Original_ShokenSetchishaGenin7JouKbn, Original_ShokenMekaGenin11JouKbn, Original_ShokenKoujiGenin11JouKbn, Original_ShokenHoshuGenin11JouKbn, Original_ShokenSeisouGenin11JouKbn, Original_ShokenSetchishaGenin11JouKbn, Original_ShokenHyoujiIchiDaiCd, Original_ShokenHyoujiIchiChuCd, Original_ShokenHyoujiIchiShoCd, Original_ShokenSakujouKbn, Original_ShokenGaikankensaCd, Original_ShokenTanisouchiCd, Original_ShokenBikou, Original_InsertDt, Original_InsertUser, Original_InsertTarm, Original_UpdateDt, Original_UpdateUser, Original_UpdateTarm);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ShokenMstTableAdapter _shokenMstTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ShokenMstTableAdapter ShokenMstTableAdapter {
            get {
                return this._shokenMstTableAdapter;
            }
            set {
                this._shokenMstTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._shokenMstTableAdapter != null) 
                            && (this._shokenMstTableAdapter.Connection != null))) {
                    return this._shokenMstTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._shokenMstTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ShokenMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokenMstTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ShokenMst.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._shokenMstTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ShokenMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._shokenMstTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ShokenMst.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._shokenMstTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ShokenMstDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._shokenMstTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ShokenMst.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._shokenMstTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ShokenMstDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._shokenMstTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._shokenMstTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager で管理されるすべての TableAdapter は同一の接続文字列を使用する必要があります。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な" +
                        " TableAdapter インスタンスに設定してください。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._shokenMstTableAdapter != null)) {
                    revertConnections.Add(this._shokenMstTableAdapter, this._shokenMstTableAdapter.Connection);
                    this._shokenMstTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._shokenMstTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._shokenMstTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._shokenMstTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._shokenMstTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._shokenMstTableAdapter != null)) {
                    this._shokenMstTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._shokenMstTableAdapter]));
                    this._shokenMstTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591